{"version":3,"sources":["validation/validateTags.js","api/getAxiosConfig.js","auth/auth.js","components/home/HomePage.js","api/activities.js","components/admin/AdminPage.js","api/tags.js","components/admin/AdminEditPage.js","components/admin/AdminNewPage.js","components/common/NotFoundPage.js","components/common/MultiQustion.js","components/Quiz/Flows/HungryFlow/HungryFlow.js","components/common/MultiSelectQuestion.js","components/Quiz/Flows/NotHungryFlow/NotHungryFlow.js","components/Quiz/Flows/BaseFlow.js","components/Quiz/QuizPage.js","components/Quiz/EndQuizResult.js","components/common/ProtectedRoute.js","components/Quiz/Activity.js","components/preresults/PreResultsMultiSelect.js","components/preresults/PreResultsPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","tags","errors","valid","includes","isValid","jwtStringToken","sessionStorage","getItem","headers","JSON","parse","axios","require","this","isAuthenticated","password","Promise","resolve","reject","a","console","log","axiosConfig","post","baseUrl","response","setItem","stringify","data","token","status","removeItem","HomePage","props","state","loading","error","login","bind","onChange","logout","onKeyPress","Auth","setState","res","Error","toast","forceUpdate","e","target","value","key","document","getElementById","click","className","id","to","onClick","localStorage","clear","type","href","Component","getAxiosConfig","Activities","get","activities","queryList","filter","Boolean","newActivity","title","description","instructions","prereq","prereq_description","editedActivity","put","activity","delete","admin","activityList","btnClick","location","pathname","newlist","getAllActivities","i","length","push","map","_id","Tags","AdminEditPage","selected_tag","relational","spiritual","intellectual","physical","allTimes","people_all","people_moreThenOne","addNewSucess","allTags","original_tags","tagsForRestore","deleted","onInputChange","editActivity","addTag","removeTag","deleteActivity","restoreTags","getActivityById","match","params","activityToEdit","getAllTags","og_array","slice","name","event","preventDefault","newTagList","newTags","index","indexOf","restorableTags","splice","editedTags","validateTags","success","confirmAlert","customUI","onClose","deleteActivityById","info","htmlFor","tag","AdminNewPage","addActivity","allTheTags","startingTags","createNewActivity","onSubmit","NotFoundPage","exact","MultiQustion","onclick_1","onclick_2","onclick_3","onclick_4","onclick_5","answer_1","answer_2","answer_3","answer_4","answer_5","question","backToLastQuestion","tool_tip_content","data-tip","HungryFlow","endQuiz","currentQuestion","MultiSelectQuestion","tags_to_add","toggletag","newTagsList","select_1","select_2","select_3","select_4","select_5","select_6","select_7","select_8","select_9","addTagsMethod","after_multi_select","label","NotHungryflow","multiSelectAnswers","directAnswer","nextQuestion","BaseFlow","selectQuestion","answer","quizEnded","NotHungryFlow","updatelocalStorage","savedQueryList","QuizPage","newQueryList","pop","questionHistory","lastquestion","nextTitle","answerArray","EndQuizResult","_isMounted","results","need_to_check_prereqs","prereqs","doneWithPrereqs","ProtectedRoute","component","rest","render","Activity","startsWith","PreResultsMultiSelect","activities_to_add","toggleActivity","newActivityList","activities_with_prereqs","PreReqConfirmationArray","PreResultsPage","prereq_activity_array","doneWithPreReqs","getQuizResults","localstoragejson","prereqs_array","newActivitiesList","activitiesArray","activityResults","updatelocalStorageActivityResults","App","path","AdminPage","window","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee60fa9d.chunk.js","sourcesContent":["module.exports = (tags)=>{\r\n    let errors=\"\"\r\n    let valid=true\r\n\r\n    if(!tags.includes('leave') && !tags.includes('stay')){\r\n        errors+=\": Leave or Stay required \";\r\n        valid=false;\r\n    }\r\n\r\n    if(!tags.includes('outside') && !tags.includes('inside')){\r\n        errors+=\": Outside or Inside required \";\r\n        valid=false;\r\n    }\r\n\r\n    if(!tags.includes('tenPlusPeople') && !tags.includes('9')  && !tags.includes('8')\r\n    && !tags.includes('7') && !tags.includes('6') && !tags.includes('5') && !tags.includes('4')\r\n    && !tags.includes('3') && !tags.includes('2') && !tags.includes('1')){\r\n        errors+=\": tenPlusPeople or Another number of people required \";\r\n        valid=false;\r\n    }\r\n\r\n    if(!tags.includes('30minutesOrLess') && !tags.includes('1hourOrLess') \r\n    && !tags.includes('2hoursOrLess') && !tags.includes('2hoursOrMore')){\r\n        errors+=\": Some Amount of Time is required \";\r\n        valid=false;\r\n    }\r\n\r\n    if(!tags.includes('free') && !tags.includes('15dollarsOrLess') \r\n    && !tags.includes('50dollarsOrLess') && !tags.includes('50dollarsOrMore')){\r\n        errors+=\": At least one cost tag is required \";\r\n        valid=false;\r\n    }\r\n\r\n    if(tags.includes('outside') && !tags.includes('springOutside') && !tags.includes('fallOutside') \r\n    && !tags.includes('summerOutside') && !tags.includes('winterOutside')){\r\n        errors+=\": At least one outside season tag is required \";\r\n        valid=false;\r\n    }\r\n\r\n    if(tags.includes('outside') && !tags.includes('snowyOutside') && !tags.includes('coldNoSnowOutside') \r\n    && !tags.includes('warmOutside') && !tags.includes('hotOutside') && !tags.includes('rainyOutside')){\r\n        errors+=\": At least one outside weather tag is required \";\r\n        valid=false;\r\n    }\r\n\r\n    \r\n\r\n    return {isValid:valid, errors}\r\n}","module.exports= ()=>{\r\n    let jwtStringToken = sessionStorage.getItem('token');\r\n        let token = JSON.parse(jwtStringToken);\r\n\r\n        let axiosConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"x-auth-token\":token\r\n            }\r\n        };\r\n        return axiosConfig;\r\n}","const axios = require('axios');\r\n\r\n//remember these must be exact for powershell script!!!!!\r\nconst baseUrl=\"https://fgr-decide.herokuapp.com/\";//prod\r\n//const baseUrl=\"http://localhost:5000/\";//local dev\r\n\r\nclass Auth{\r\n    constructor(){\r\n        this.isAuthenticated = false;\r\n    }\r\n\r\n    login(password){\r\n        return new Promise(async (resolve,reject)=>{\r\n            try{\r\n                console.log(\"in login\");\r\n                let axiosConfig = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json;charset=UTF-8',\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                    }\r\n                  };\r\n    \r\n    \r\n                let response = await axios.post(baseUrl+\"auth\", {password}, axiosConfig );\r\n                    \r\n                    sessionStorage.setItem('token', JSON.stringify(response.data.token));\r\n                    this.isAuthenticated = true;\r\n                    console.log(\"Authenticated:\", this.isAuthenticated)\r\n                    resolve({\"status\":response.status, \"data\":response.data})\r\n                \r\n            }catch(e){\r\n                if(e.response && e.response.data){\r\n                    reject({\"Error\":e.response.data})\r\n                }else{\r\n                    reject({\"Error\":e})\r\n                }\r\n                \r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('token');\r\n        this.isAuthenticated = false;\r\n        console.log(\"Authenticated:\", this.isAuthenticated)\r\n        \r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.isAuthenticated;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default new Auth();\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Auth from \"../../auth/auth\";\r\nimport './HomePage.css';\r\n\r\n//https://www.youtube.com/watch?v=ahSz_bmePNk this will help for temparity showing invalid input.\r\n\r\nexport class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loading: false,\r\n            password: \"\",\r\n            error: \"\",\r\n        }\r\n\r\n        this.login = this.login.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.onKeyPress = this.onKeyPress.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        let token = sessionStorage.getItem('token');\r\n        if (token != null) {\r\n            Auth.isAuthenticated = true;\r\n        }\r\n    }\r\n\r\n\r\n    async login() {\r\n\r\n        try {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n\r\n            let res = await Auth.login(this.state.password);\r\n            console.log(\"res:\", res);\r\n\r\n            this.setState({\r\n                loading: false,\r\n                // authenticated:Auth.isAuthenticated\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({\r\n                loading: false,\r\n            });\r\n            if (typeof (e.Error) == \"string\") {\r\n\r\n                toast.error(`Error: ${e.Error}`);\r\n            } else {\r\n                toast.error(`Error: ${JSON.stringify(e)}`);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    logout() {\r\n        Auth.logout();\r\n        //force update with similated state update\r\n        this.forceUpdate();\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    onKeyPress(e) {\r\n        if (e.key === 'Enter' && this.state.password) {\r\n            document.getElementById(\"AddBtn\").click();\r\n        } else if (e.key === 'Enter') {\r\n            toast.error(`Error: Please enter the password`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { password, loading } = this.state\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"homePageBackgroundDiv\">\r\n                <div className=\"HomePageContentDiv\">\r\n                    <h1 className=\"title\">Decide</h1>\r\n\r\n                    <h3 className=\"welcomeMessage\" >Trying to Decide what to do??</h3>\r\n                    <p>Answer a few questions and we will help you brainstorm a solution!</p>\r\n                    {loading && <h2>Loading...</h2>}\r\n\r\n                    {Auth.isAuthenticated ?\r\n                        <div className=\"takequizBtnDiv\">\r\n                            <NavLink\r\n                                id=\"takeQuiz\"\r\n                                className=\"btn btn-primary\"\r\n                                to=\"quiz/\"\r\n                                onClick={()=>{ localStorage.clear(); sessionStorage.setItem(\"quizEnded\", \"False\") }}\r\n                            >Take The Quiz!</NavLink>\r\n                        </div>\r\n                        :\r\n                        <div className=\"passwordDiv\" >\r\n                            <label>Password</label>\r\n                            <div className=\"inputDiv\">\r\n                                <input className={(password ? \" password\" : \"\")} onKeyPress={this.onKeyPress} onChange={this.onChange} value={password} type=\"password\" />\r\n                                {password && <button id=\"AddBtn\" onClick={this.login}>login</button>}\r\n                            </div>\r\n                            <p>Decide is in development, <a href=\"mailto:frankgriviera@outlook.com\">Contact Author</a> for temp password.</p>\r\n                        </div>\r\n                    }\r\n                    <ToastContainer />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage\r\n\r\n","/* eslint-disable import/no-named-as-default */\r\nconst axios = require('axios');\r\nconst getAxiosConfig = require('./getAxiosConfig');\r\n\r\n//remember these must be exact for powershell script!!!!!\r\nconst baseUrl=\"https://fgr-decide.herokuapp.com/\";//prod\r\n//const baseUrl=\"http://localhost:5000/\";//local dev\r\n\r\nclass Activities {\r\n\r\n    static getAllActivities() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let axiosConfig = getAxiosConfig()\r\n\r\n                let activities = await axios.get(baseUrl + 'activities', axiosConfig);\r\n                if (activities == null) resolve(null);\r\n                //console.log(\"activities data\",activities.data);\r\n                resolve(activities.data);\r\n            } catch (e) {\r\n                reject(e)\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    static getQuizResults(queryList) {\r\n\r\n        if (queryList) {\r\n            //remove falsy strings in array with filter. \r\n            queryList = queryList.filter(Boolean);\r\n        }\r\n\r\n\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let axiosConfig = getAxiosConfig()\r\n\r\n                let activities = await axios.post(baseUrl + 'solution/v2/', { queryList }, axiosConfig);\r\n                if (activities == null) resolve(null);\r\n                //console.log(\"activities data\",activities.data);\r\n                resolve(activities.data);\r\n            } catch (e) {\r\n                reject(e)\r\n            }\r\n        })\r\n    }\r\n\r\n    static createNewActivity(newActivity) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let axiosConfig = getAxiosConfig()\r\n\r\n                let response = await axios.post(baseUrl + 'activities', {\r\n                    tags: newActivity.tags,\r\n                    title: newActivity.title,\r\n                    description: newActivity.description,\r\n                    instructions: newActivity.instructions,\r\n                    prereq: newActivity.prereq,\r\n                    prereq_description: newActivity.prereq_description,\r\n                }, axiosConfig);\r\n                //if (response==null) resolve(null) ;\r\n                console.log(\" create new activity response: \", response);\r\n                resolve(response);\r\n            } catch (e) {\r\n                reject(e)\r\n            }\r\n        })\r\n    }\r\n\r\n    static editActivity(id, editedActivity) {\r\n\r\n        console.log(\"editedActivity: \", editedActivity)\r\n\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let axiosConfig = getAxiosConfig()\r\n\r\n                let response = await axios.put(baseUrl + 'activities/' + id, {\r\n                    tags: editedActivity.tags,\r\n                    title: editedActivity.title,\r\n                    description: editedActivity.description,\r\n                    instructions: editedActivity.instructions,\r\n                    prereq: editedActivity.prereq,\r\n                    prereq_description: editedActivity.prereq_description,\r\n                }, axiosConfig);\r\n                //if (response==null) resolve(null) ;\r\n                console.log(\" create new activity response: \", response);\r\n                resolve(response);\r\n            } catch (e) {\r\n                reject(e)\r\n            }\r\n        })\r\n    }\r\n\r\n    static getActivityById(id) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let axiosConfig = getAxiosConfig()\r\n\r\n                let activity = await axios.get(baseUrl + 'activities/' + id, axiosConfig);\r\n                if (activity == null) resolve(null);\r\n                //console.log(\"activities data\",activity.data);\r\n                resolve(activity.data);\r\n            } catch (e) {\r\n                reject(e)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    static deleteActivityById(id) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let axiosConfig = getAxiosConfig()\r\n\r\n                let response = await axios.delete(baseUrl + 'activities/' + id, axiosConfig);\r\n                if (response.data == null) resolve(null);\r\n                console.log(\"delete activity response\", response);\r\n                resolve(response);\r\n            } catch (e) {\r\n                reject(e)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Activities;\r\n","import React, { Component } from 'react'\r\nimport Activities from '../../api/activities';\r\n\r\nexport class admin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             activityList:[],\r\n             loading:false\r\n        }\r\n        \r\n        this.btnClick=this.btnClick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Current Route:\", this.props.location.pathname)\r\n        if(this.props.location.pathname===\"/decide-admin/list\"){\r\n            this.btnClick()\r\n        }\r\n    }\r\n\r\n    async btnClick(){\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        let newlist=[]\r\n        \r\n        let activities = await Activities.getAllActivities();\r\n        // console.log(\"activities:\", activities);\r\n        if(activities){\r\n            for(let i =0; i<activities.length;i++){\r\n                newlist.push(activities[i]);\r\n                // console.log(activities[i]);\r\n            }\r\n        }else{\r\n            newlist.push({\"title\":\"Error\",\"description\":\"Something Append with api call\"})\r\n        }\r\n\r\n\r\n        this.setState({\r\n            activityList:newlist,\r\n            loading:false\r\n        });\r\n    }\r\n\r\n    //onclick of submit button,\r\n    //onchange of values goes into local state values and then when submited we will send a request with info.\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>This is the AdminPage</h1>\r\n                <button onClick={this.btnClick}>List activities</button>\r\n                <button><a href=\"/decide-admin/new/\">Add new activities</a></button>\r\n                <button onClick={()=>{ localStorage.clear(); sessionStorage.setItem(\"quizEnded\", \"False\") }}><a href=\"/quiz/\">Take The Quiz!</a></button>\r\n                {/* <NavLink\r\n                                to=\"quiz/\"\r\n                                onClick={()=>{ localStorage.clear(); sessionStorage.setItem(\"quizEnded\", \"False\") }}\r\n                            >Take The Quiz!</NavLink> */}\r\n                {this.state.loading && <h2>Loading...</h2>}\r\n                <ul>\r\n                    {this.state.activityList.map((activity)=>\r\n                    \r\n                    <li key={activity._id}><div>\r\n                    \r\n                    <h4> <a href={`/decide-admin/edit/${activity._id}`}>{activity.title}</a> : {activity.description}</h4>\r\n                   </div></li>)\r\n                    }\r\n                </ul>\r\n         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default admin\r\n","/* eslint-disable import/no-named-as-default */\r\nconst axios = require('axios');\r\nconst getAxiosConfig = require('./getAxiosConfig');\r\n\r\n//remember these must be exact for powershell script!!!!!\r\nconst baseUrl=\"https://fgr-decide.herokuapp.com/\";//prod\r\n//const baseUrl=\"http://localhost:5000/\";//local dev\r\n\r\nclass Tags{\r\n\r\n    static getAllTags(){\r\n        return new Promise(async (resolve, reject)=>{\r\n            try{\r\n                let axiosConfig = getAxiosConfig()\r\n\r\n                let tags = await axios.get(baseUrl + 'tags/all', axiosConfig);\r\n                if (tags==null) resolve(null) ;\r\n                console.log(\"tags data\",tags.data.tags);\r\n                resolve(tags.data.tags) ;\r\n            }catch(e){\r\n                reject(e)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Tags;\r\n","import React, { Component } from 'react'\r\nimport Activities from '../../api/activities';\r\nimport Tags from '../../api/tags';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport validateTags from '../../validation/validateTags';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './AdminActivityDetail.css'\r\n\r\nexport class AdminEditPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            instructions: \"\",\r\n            selected_tag: \"\",\r\n            prereq:\"\",\r\n            prereq_description:\"\",\r\n            relational: false,\r\n            spiritual: false,\r\n            intellectual: false,\r\n            physical: false,\r\n            allTimes: false,\r\n            people_all: false,\r\n            people_moreThenOne: false,\r\n            addNewSucess: false,\r\n            tags: [],\r\n            allTags: [],\r\n            original_tags:[],\r\n            tagsForRestore:[],\r\n            activity: {\r\n                title: \"\", description: \"\",\r\n                instructions: \"\", tags: [],\r\n                prereq:\"\", prereq_description:\"\"\r\n            },\r\n            deleted: false,\r\n            error: \"\"\r\n\r\n        }\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.editActivity = this.editActivity.bind(this);\r\n        this.addTag = this.addTag.bind(this);\r\n        this.removeTag = this.removeTag.bind(this);\r\n        this.deleteActivity = this.deleteActivity.bind(this);\r\n        this.restoreTags=this.restoreTags.bind(this);\r\n    }\r\n\r\n    //LifeCycle method\r\n    async componentWillMount() {\r\n        try {\r\n            let activityToEdit = await Activities.getActivityById(this.props.match.params.id);\r\n            let allTags = await Tags.getAllTags();\r\n            let og_array = activityToEdit.tags.slice()\r\n            console.log(\"activityToEdit.tags: \", activityToEdit.tags)\r\n\r\n            let prereq = activityToEdit.prereq ? activityToEdit.prereq : \"\";\r\n            let prereq_description = activityToEdit.prereq_description ? activityToEdit.prereq_description : \"\"\r\n\r\n            this.setState({\r\n                tags: activityToEdit.tags,\r\n                title: activityToEdit.title,\r\n                description: activityToEdit.description,\r\n                instructions: activityToEdit.instructions,\r\n                prereq:prereq,\r\n                prereq_description:prereq_description,\r\n                allTags: allTags,\r\n                original_tags:og_array\r\n            })\r\n        } catch (e) {\r\n            console.log(\"Error: \", e)\r\n        }\r\n    }\r\n\r\n    onInputChange(e) {\r\n        if (e.target.name === 'title')\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        if (e.target.name === 'description')\r\n            this.setState({\r\n                description: e.target.value\r\n            });\r\n        if (e.target.name === 'instructions')\r\n            this.setState({\r\n                instructions: e.target.value\r\n            });\r\n        if (e.target.name === 'prereq')\r\n            this.setState({\r\n                prereq: e.target.value\r\n            });\r\n        if (e.target.name === 'prereq_description')\r\n            this.setState({\r\n                prereq_description: e.target.value\r\n            });\r\n        if (e.target.name === 'select_tag')\r\n            this.setState({\r\n                selected_tag: e.target.value\r\n            });\r\n    }\r\n\r\n    addTag(event) {\r\n        event.preventDefault()\r\n        let newTagList = this.state.tags\r\n\r\n        if (this.state.selected_tag && !newTagList.includes(this.state.selected_tag)) {\r\n            newTagList.push(this.state.selected_tag)\r\n        }\r\n        this.setState({\r\n            tags: newTagList\r\n        });\r\n    }\r\n\r\n    restoreTags(){\r\n        let newTagList = this.state.tags\r\n        let tagsForRestore = this.state.tagsForRestore\r\n        for(let i=0;i<tagsForRestore.length;i++){\r\n            console.log(\"tagsForRestore[i]\", tagsForRestore[i])\r\n            newTagList.push(tagsForRestore[i]);\r\n        }\r\n\r\n        this.setState({\r\n            tagsForRestore:[],\r\n            tags: newTagList\r\n        });\r\n\r\n    }\r\n\r\n    removeTag(e) {\r\n        var newTags = this.state.tags\r\n\r\n        var index = newTags.indexOf(e.target.value);\r\n        \r\n        //add to tags to restore if its an original tag\r\n        let restorableTags = this.state.tagsForRestore;\r\n        if(this.state.original_tags.includes(newTags[index])){\r\n            restorableTags.push(newTags[index]);\r\n        }\r\n        \r\n        if (index > -1) {\r\n            newTags.splice(index, 1);\r\n        }\r\n        this.setState({\r\n            tagsForRestore:restorableTags,\r\n            tags: newTags\r\n\r\n        })\r\n    }\r\n\r\n    async editActivity(event) {\r\n        event.preventDefault()\r\n\r\n        let editedTags = validateTags(this.state.tags);\r\n\r\n        if (editedTags.isValid) {\r\n            //Add tags based on inputs\r\n            let editedActivity = {\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                instructions: this.state.instructions,\r\n                prereq: this.state.prereq,\r\n                prereq_description: this.state.prereq_description,\r\n                tags: this.state.tags\r\n            }\r\n            this.setState({\r\n                activity: editedActivity,\r\n                error: \"\"\r\n            });\r\n            //Call Api POST\r\n            try {\r\n                let response = await Activities.editActivity(this.props.match.params.id, editedActivity)\r\n                if (response.status === 200) {\r\n                    console.log(\"Activity succesfully edited\")\r\n                    toast.success(`Success: Activity succesfully edited`);\r\n                } else {\r\n                    console.log(\"Not sure activity was added\")\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n                console.log(e.response.data)\r\n                this.setState({\r\n                    error: e.response.data\r\n                })\r\n                toast.error(`Error: ${e.response.data}`);\r\n            }\r\n        } else {\r\n            this.setState({\r\n                error: editedTags.errors\r\n            })\r\n            toast.error(`Error: ${editedTags.errors}`);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    deleteActivity() {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className='custom-ui'>\r\n                        <h1>Are you sure?</h1>\r\n                        <p>You want to delete this file?</p>\r\n                        <button onClick={onClose}>No</button>\r\n                        <button\r\n                            onClick={async () => {\r\n                                try {\r\n                                    let response = await Activities.deleteActivityById(this.props.match.params.id)\r\n                                    if (response.status === 200) {\r\n                                        console.log(\"Activity succesfully deleted\")\r\n                                        toast.info(\"Activity succesfully deleted\");\r\n                                    } else {\r\n                                        console.log(\"Not sure activity was deleted\")\r\n                                        toast.info(\"Not sure activity was deleted\");\r\n                                    }\r\n                                } catch (e) {\r\n                                    console.log(e)\r\n                                }\r\n\r\n                                this.setState({\r\n                                    deleted: true\r\n                                })\r\n\r\n                                onClose();\r\n\r\n\r\n\r\n                            }}\r\n                        >\r\n                            Yes, Delete it!\r\n                  </button>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.deleted) {\r\n            return (\r\n                <Redirect to={{\r\n                    pathname: '/decide-admin/list'\r\n                }}\r\n                />\r\n            )\r\n        } else {\r\n\r\n            let {error, description, title, allTags, \r\n                original_tags, tags, instructions, prereq, \r\n                prereq_description, selected_tag} = this.state\r\n            return (\r\n                <div className=\"AdminEditPage\">\r\n                    <h1>AdminEditPage</h1>\r\n\r\n                    <NavLink to=\"/decide-admin\">Go to admin Home</NavLink>\r\n\r\n                    <form  >\r\n                        {error && <p>Error:{error}</p>}\r\n                        {/* <label htmlFor=\"title\">Title</label>\r\n                        <input onChange={this.onInputChange} name=\"title\" value={this.state.title} />\r\n                        <label htmlFor=\"description\">description</label>\r\n                        <textarea onChange={this.onInputChange} name=\"description\" value={this.state.description} />\r\n                        <label htmlFor=\"instructions\">instructions</label>\r\n                        <textarea onChange={this.onInputChange} name=\"instructions\" value={this.state.instructions} />\r\n                        <select name=\"select_tag\" onChange={this.onInputChange} value={this.state.selected_tag}>\r\n                            <option value=\"\">None</option>\r\n                            {this.state.allTags.map(tag => {\r\n                                return <option key={tag} value={tag}>{tag}</option>\r\n                            })}\r\n                        </select>\r\n                        <button onClick={this.addTag}>Add Tag</button> */}\r\n                        <div className=\"titleDiv\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input onChange={this.onInputChange} name=\"title\" value={title} />\r\n                        </div>\r\n                        <div className=\"descriptionDiv\">\r\n                            <label htmlFor=\"description\">description</label>\r\n                            <textarea onChange={this.onInputChange} name=\"description\" value={description} />\r\n                        </div>\r\n                        <div className=\"intructionsDiv\">\r\n                            <label htmlFor=\"instructions\">instructions</label>\r\n                            <textarea onChange={this.onInputChange} name=\"instructions\" value={instructions} />\r\n                        </div>\r\n                        <div className=\"prereqDiv\">\r\n                            <label htmlFor=\"prereq\">prereq</label>\r\n                            <textarea onChange={this.onInputChange} name=\"prereq\" value={prereq} />\r\n                        </div>\r\n                        <div className=\"prereq_descriptionDiv\">\r\n                            <label htmlFor=\"prereq_description\">prereq_description</label>\r\n                            <textarea onChange={this.onInputChange} name=\"prereq_description\" value={prereq_description} />\r\n                        </div>\r\n                        <div className=\"tagSelectDiv\">\r\n                            <select name=\"select_tag\" onChange={this.onInputChange} value={selected_tag}>\r\n                                <option value=\"\">None</option>\r\n                                {allTags.map(tag => {\r\n                                    return <option key={tag} value={tag}>{tag}</option>\r\n                                })}\r\n\r\n                            </select>\r\n                            <button onClick={this.addTag}>Add Tag</button>\r\n\r\n                           {(this.state.tagsForRestore.length > 0) && <button type=\"button\" onClick={this.restoreTags} >Restore Og Tags</button>} \r\n                        </div>\r\n\r\n\r\n                        \r\n\r\n                        <div className=\"tagsToAddList\">\r\n                            <h5>Edited tags to be added</h5>\r\n                            <ul>{tags.map(tag => { return <li key={tag}  >\r\n                                <button className={ original_tags.includes(tag) ? \"original_tag\" :\" \"} onClick={this.removeTag} value={tag}>{tag}</button>\r\n                                </li> })}\r\n                            </ul>\r\n                        </div>\r\n                        <NavLink to=\"/decide-admin\">Go to admin Home</NavLink>\r\n                        <button className=\"btn btn-primary\" type=\"button\"  onClick={this.editActivity}>Finish Edit</button>\r\n\r\n                        <button className=\"btn btn-danger\" type=\"button\"  onClick={this.deleteActivity}>Delete Activity</button>\r\n                    \r\n                    </form>\r\n\r\n                    <ToastContainer />\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default AdminEditPage\r\n","import React, { Component } from 'react'\r\nimport Activities from '../../api/activities';\r\nimport Tags from '../../api/tags';\r\nimport { NavLink } from 'react-router-dom';\r\nimport validateTags from '../../validation/validateTags';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './AdminActivityDetail.css'\r\n\r\nexport class AdminNewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            instructions: \"\",\r\n            selected_tag: \"\",\r\n            prereq:\"\",\r\n            prereq_description:\"\",\r\n            relational: false,\r\n            spiritual: false,\r\n            intellectual: false,\r\n            physical: false,\r\n            allTimes: false,\r\n            people_all: false,\r\n            people_moreThenOne: false,\r\n            addNewSucess: false,\r\n            tags: [],\r\n            allTags: [],\r\n            newActivity: {\r\n                title: \"\", description: \"\",\r\n                instructions: \"\", tags: [],\r\n                prereq:\"\", prereq_description:\"\"\r\n            },\r\n            error: \"\"\r\n        }\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.addActivity = this.addActivity.bind(this);\r\n        this.addTag = this.addTag.bind(this);\r\n        this.removeTag = this.removeTag.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            let allTheTags = await Tags.getAllTags();\r\n            let startingTags = allTheTags.slice(0);\r\n\r\n            this.setState({ tags: startingTags, allTags: allTheTags })\r\n        } catch (e) {\r\n            console.log(\"Error: \", e)\r\n        }\r\n    }\r\n\r\n    onInputChange(e) {\r\n        if (e.target.name === 'title')\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        if (e.target.name === 'description')\r\n            this.setState({\r\n                description: e.target.value\r\n            });\r\n        if (e.target.name === 'instructions')\r\n            this.setState({\r\n                instructions: e.target.value\r\n            });\r\n        if (e.target.name === 'prereq')\r\n            this.setState({\r\n                prereq: e.target.value\r\n            });\r\n        if (e.target.name === 'prereq_description')\r\n            this.setState({\r\n                prereq_description: e.target.value\r\n            });\r\n        if (e.target.name === 'select_tag')\r\n            this.setState({\r\n                selected_tag: e.target.value\r\n            });\r\n    }\r\n\r\n    addTag(event) {\r\n        event.preventDefault()\r\n        let newTagList = this.state.tags\r\n\r\n        if (this.state.selected_tag && !newTagList.includes(this.state.selected_tag)) {\r\n            newTagList.push(this.state.selected_tag)\r\n        }\r\n        this.setState({\r\n            tags: newTagList\r\n        });\r\n    }\r\n\r\n    removeTag(e) {\r\n        var newTags = this.state.tags\r\n        var index = newTags.indexOf(e.target.value);\r\n\r\n        if (index > -1) {\r\n            newTags.splice(index, 1);\r\n        }\r\n\r\n        this.setState({\r\n            tags: newTags\r\n        })\r\n    }\r\n\r\n    async addActivity(event) {\r\n        event.preventDefault()\r\n\r\n        let newTags = validateTags(this.state.tags);\r\n\r\n        if (newTags.isValid) {\r\n            //Add tags based on inputs\r\n            let newActivity = {\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                instructions: this.state.instructions,\r\n                tags: this.state.tags,\r\n                prereq: this.state.prereq,\r\n                prereq_description: this.state.prereq_description\r\n            }\r\n\r\n            this.setState({\r\n                newActivity: newActivity,\r\n                error: \"\"\r\n            });\r\n            //Call Api POST\r\n            try {\r\n                let response = await Activities.createNewActivity(newActivity)\r\n                let allTags = await Tags.getAllTags();\r\n                if (response.status === 201) {\r\n                    this.setState({\r\n                        tags: allTags\r\n                    })\r\n\r\n                    toast.success(`Success: Activity succesfully added`);\r\n\r\n                } else {\r\n                    console.log(\"There was an error with the activity\")\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n                console.log(e.response.data)\r\n                this.setState({\r\n                    error: e.response.data\r\n                })\r\n                toast.error(`Error: ${e.response.data}`);\r\n            }\r\n        } else {\r\n            this.setState({\r\n                error: newTags.errors\r\n            })\r\n            toast.error(`Error: ${newTags.errors}`);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"AdminNewPage\">\r\n                <h1>AdminNewPage</h1>\r\n\r\n                <NavLink to=\"/decide-admin\">Go to admin Home</NavLink>\r\n\r\n                <form onSubmit={this.addActivity} >\r\n                    {this.state.error && <p>Error:{this.state.error}</p>}\r\n                    <div className=\"titleDiv\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input onChange={this.onInputChange} name=\"title\" value={this.state.title} />\r\n                    </div>\r\n                    <div className=\"descriptionDiv\">\r\n                        <label htmlFor=\"description\">description</label>\r\n                        <textarea onChange={this.onInputChange} name=\"description\" value={this.state.description} />\r\n                    </div>\r\n                    <div className=\"intructionsDiv\">\r\n                        <label htmlFor=\"instructions\">instructions</label>\r\n                        <textarea onChange={this.onInputChange} name=\"instructions\" value={this.state.instructions} />\r\n                    </div>\r\n                    <div className=\"prereqDiv\">\r\n                        <label htmlFor=\"prereq\">prereq</label>\r\n                        <textarea onChange={this.onInputChange} name=\"prereq\" value={this.state.prereq} />\r\n                    </div>\r\n                    <div className=\"prereq_descriptionDiv\">\r\n                        <label htmlFor=\"prereq_description\">prereq description</label>\r\n                        <textarea onChange={this.onInputChange} name=\"prereq_description\" value={this.state.prereq_description} />\r\n                    </div>\r\n                    <div className=\"tagSelectDiv\">\r\n                        <select name=\"select_tag\" onChange={this.onInputChange} value={this.state.selected_tag}>\r\n                            <option value=\"\">None</option>\r\n                            {this.state.allTags.map(tag => {\r\n                                return <option key={tag} value={tag}>{tag}</option>\r\n                            })}\r\n\r\n                        </select>\r\n                        <button onClick={this.addTag}>Add Tag</button>\r\n                    </div>\r\n\r\n                    <div className=\"tagsToAddList\">\r\n                        <h5>New tags to be added</h5>\r\n                        <ul>{this.state.tags.map(tag => { return <li key={tag}  ><button onClick={this.removeTag} value={tag}>{tag}</button></li> })}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary\" type='submit'>Create</button>\r\n                    <NavLink to=\"/decide-admin\">Go to admin Home</NavLink>\r\n                </form>\r\n\r\n\r\n                {/* <div><h5>New Activity</h5>\r\n                    <ul>\r\n                        <li>title: {this.state.newActivity.title}</li>\r\n                        <li>description: {this.state.newActivity.description}</li>\r\n                        <li>instructions: {this.state.newActivity.instructions}</li>\r\n                        <li>tags:<ul>{this.state.newActivity.tags.map(tag => { return <li key={tag}>{tag}</li> })}\r\n                        </ul> </li>\r\n                    </ul>\r\n\r\n                </div> */}\r\n                <ToastContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminNewPage\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n    return (\r\n        <div className=\"NotFoundDiv\" >\r\n\r\n          <div className=\"NotFoundPageContentDiv\">\r\n          <h1>Uh OH...</h1>\r\n          <h4>404 Error - We couldnt find the page you were trying to reach.</h4>\r\n          <button className=\"btn btn-primary\">\r\n          <NavLink\r\n                className=\"btn-link\"\r\n                exact\r\n                to=\"/\"\r\n              >\r\n                Go Home\r\n              </NavLink>\r\n          </button>\r\n            \r\n          </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage","import React from 'react'\r\n\r\nfunction MultiQustion(props) {\r\n\r\n    const {onclick_1, onclick_2, onclick_3, onclick_4, onclick_5, \r\n        answer_1, answer_2, answer_3, answer_4, answer_5, question, backToLastQuestion, tool_tip_content} =props\r\n\r\n    return (\r\n        <div className=\"dualityQuestionDiv\">\r\n\r\n            <h1>{question}</h1>\r\n            {tool_tip_content && <label className=\"tool tooltiplabel\" data-tip={tool_tip_content} >More Context</label>}\r\n            <button className=\"btn btn-primary\" onClick={onclick_1}>{answer_1}</button>\r\n            {answer_2 && <button className=\"btn btn-primary\" onClick={onclick_2}>{answer_2}</button>}\r\n            {answer_3 && <button className=\"btn btn-primary\" onClick={onclick_3}>{answer_3}</button>}\r\n            {answer_4 && <button className=\"btn btn-primary\" onClick={onclick_4}>{answer_4}</button>}\r\n            {answer_5 && <button className=\"btn btn-primary\" onClick={onclick_5}>{answer_5}</button>}\r\n\r\n            <button className=\"btn btn-secondary goBackBtn\" onClick={backToLastQuestion}>Go Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiQustion\r\n","import React from 'react';\r\nimport MultiQustion from '../../../common/MultiQustion'\r\n\r\nfunction HungryFlow(props) {\r\n\r\n    let {endQuiz, backToLastQuestion, currentQuestion }=props\r\n    //if hungry and leave\r\n    if (currentQuestion === \"What kind of dining?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"What kind of dining?\"}\r\n\r\n            tool_tip_content={`Resturants are places where you sit\r\n             down somewhere for extended period of time.\r\n             Fast causal is where you may order at the counter and \r\n             wait for a short period of time. A fast food \r\n             place would mostly be represented by places that\r\n             would have drive throughs at their location. `}\r\n\r\n            onclick_1={() => {endQuiz(\"resturants\") }}\r\n            answer_1={\"resturants\"}\r\n            onclick_2={() => {endQuiz(\"fast_casual\") }}\r\n            answer_2={\"fast casual\"}\r\n            onclick_3={() => {endQuiz(\"fast_food\") }}\r\n            answer_3={\"fast food\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n       //if hungry and stay\r\n    } else if (currentQuestion === \"Want to prepare your own food?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"Want to prepare your own food?\"}\r\n\r\n            tool_tip_content={`Are you and or your collective group,\r\n            willing to prepare your own food.\r\n            This would assume you are in some \r\n            environment that would allow for some food prep.`}\r\n\r\n            onclick_1={() => {endQuiz(\"takeOut\") }}\r\n            answer_1={\"No\"}\r\n            onclick_2={() => {endQuiz(\"foodPrep\") }}\r\n            answer_2={\"Yes\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default HungryFlow\r\n","import React, { Component } from 'react'\r\nimport \"./MultiSelectQuestion.css\"\r\n\r\nexport class MultiSelectQuestion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            tags_to_add:[]     \r\n        }\r\n\r\n        this.toggletag=this.toggletag.bind(this);\r\n    }\r\n\r\n    toggletag(tag){\r\n        //Add if its not already in array, remove if it already is.\r\n        let newTagsList = this.state.tags_to_add\r\n        if(newTagsList.includes(tag)){\r\n            //remove tag since already in \r\n            var index = newTagsList.indexOf(tag);\r\n            newTagsList.splice(index, 1);\r\n        }else{\r\n            //add tag since already in \r\n            newTagsList.push(tag);\r\n        }\r\n        \r\n\r\n        this.setState({\r\n            tags_to_add: newTagsList\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n        const {select_1, select_2, select_3, select_4, select_5, select_6, select_7, select_8, select_9,\r\n             question, backToLastQuestion, tool_tip_content, addTagsMethod, after_multi_select} =this.props\r\n\r\n            const {tags_to_add} = this.state\r\n        return (\r\n            <div className=\"multiSelectQuestionDiv\">\r\n\r\n                <h1>{question}</h1>\r\n                {tool_tip_content && <label className=\"tool tooltiplabel\" data-tip={tool_tip_content} >More Context</label>}\r\n                {/* <button className=\"btn btn-primary\" onClick={toggletag}>{select_1.label}</button> */}\r\n                {/* <button className=\"btn btn-primary\" onClick={toggletag}>{select_2.label}</button> */}\r\n\r\n                <div className='multiSelectButtons'>\r\n                    <button className={tags_to_add.includes(select_1.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_1.tag)}}>{select_1.label}</button>\r\n                    <button className={tags_to_add.includes(select_2.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_2.tag)}}>{select_2.label}</button>\r\n                    { select_4 && <button className={tags_to_add.includes(select_4.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_4.tag)}}>{select_4.label}</button>} \r\n                    { select_3 && <button className={tags_to_add.includes(select_3.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_3.tag)}}>{select_3.label}</button>} \r\n                    { select_5 && <button className={tags_to_add.includes(select_5.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_5.tag)}}>{select_5.label}</button>} \r\n                    { select_6 && <button className={tags_to_add.includes(select_6.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_6.tag)}}>{select_6.label}</button>} \r\n                    { select_7 && <button className={tags_to_add.includes(select_7.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_7.tag)}}>{select_7.label}</button>} \r\n                    { select_8 && <button className={tags_to_add.includes(select_8.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_8.tag)}}>{select_8.label}</button>} \r\n                    { select_9 && <button className={tags_to_add.includes(select_9.tag) ? \"selected-multiselect multiSelectButton\" : \"unselected-multiselect multiSelectButton\"} onClick={()=>{this.toggletag(select_9.tag)}}>{select_9.label}</button>}\r\n                </div>\r\n                 \r\n\r\n\r\n\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                        addTagsMethod(this.state.tags_to_add);\r\n                        after_multi_select();\r\n                    }}>NEXT</button>\r\n\r\n                <button className=\"btn btn-secondary goBackBtn\" onClick={backToLastQuestion}>Go Back</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MultiSelectQuestion\r\n\r\n\r\n\r\n\r\n// function MultiSelectQustion(props) {\r\n\r\n//     const {onclick_1, onclick_2, onclick_3, onclick_4, onclick_5, \r\n//         answer_1, answer_2, answer_3, answer_4, answer_5, question, backToLastQuestion, tool_tip_content} =props\r\n\r\n//     return (\r\n//         <div className=\"dualityQuestionDiv\">\r\n\r\n//             <h1>{question}</h1>\r\n//             {tool_tip_content && <label className=\"tool tooltiplabel\" data-tip={tool_tip_content} >More Context</label>}\r\n//             <button className=\"btn btn-primary\" onClick={onclick_1}>{answer_1}</button>\r\n//             {answer_2 && <button className=\"btn btn-primary\" onClick={onclick_2}>{answer_2}</button>}\r\n//             {answer_3 && <button className=\"btn btn-primary\" onClick={onclick_3}>{answer_3}</button>}\r\n//             {answer_4 && <button className=\"btn btn-primary\" onClick={onclick_4}>{answer_4}</button>}\r\n//             {answer_5 && <button className=\"btn btn-primary\" onClick={onclick_5}>{answer_5}</button>}\r\n\r\n//             <button className=\"btn btn-secondary goBackBtn\" onClick={backToLastQuestion}>Go Back</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default MultiSelectQustion\r\n","import React from 'react'\r\n// import { Redirect } from 'react-router-dom';\r\nimport MultiQustion from '../../../common/MultiQustion'\r\nimport MultiSelectQustion from '../../../common/MultiSelectQuestion'\r\n\r\nfunction NotHungryflow(props) {\r\n\r\n    let {multiSelectAnswers, directAnswer, nextQuestion, endQuiz, backToLastQuestion, currentQuestion}=props\r\n    if (currentQuestion === \"Want to be inside or outside?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"Want to be inside or outside?\"}\r\n            onclick_1={() => { directAnswer(\"inside\"); \r\n                nextQuestion(\"How much are you willing to spend?\") }}\r\n            answer_1={\"Inside\"}\r\n            onclick_2={() => { directAnswer(\"outside\"); \r\n                nextQuestion(\"How much are you willing to spend?\") }}\r\n            answer_2={\"Outside\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    } else if (currentQuestion === \"How much are you willing to spend?\"){\r\n\r\n        return(\r\n            <MultiQustion\r\n            question={\"How much are you willing to spend per person?\"}\r\n\r\n            tool_tip_content={`Not all activites cost money,\r\n             but its helpful for us to get a general idea of how much you or your\r\n             group is willing to spend per person on average.`}\r\n\r\n            answer_1={\"Nothing\"}\r\n            onclick_1={() => {\r\n                directAnswer(\"free\");\r\n                nextQuestion(\"Want to do something that allows for high social verbal interaction?\")\r\n            }}\r\n\r\n            answer_2={\"15 USD or less\"}\r\n            onclick_2={() => {\r\n                directAnswer(\"15dollarsOrLess\");\r\n                nextQuestion(\"Want to do something that allows for high social verbal interaction?\")\r\n            }}\r\n\r\n            answer_3={\"50 USD or less\"}\r\n            onclick_3={() => {\r\n                directAnswer(\"50dollarsOrLess\");\r\n                nextQuestion(\"Want to do something that allows for high social verbal interaction?\")\r\n            }}\r\n\r\n            answer_4={\"50 USD or more\"}\r\n            onclick_4={() => {\r\n                directAnswer(\"50dollarsOrMore\");\r\n                nextQuestion(\"Want to do something that allows for high social verbal interaction?\")\r\n            }}\r\n\r\n            backToLastQuestion={backToLastQuestion}\r\n        />\r\n        )\r\n       \r\n\r\n    }else if (currentQuestion === \"Want to do something that allows for high social verbal interaction?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"Want to do something that allows for high social verbal interaction?\"}\r\n\r\n            tool_tip_content={`Do you or the collective group want to do an activity that allows\r\n            for, or encourges, people to verbally interact with one another?`}\r\n\r\n            onclick_1={() => { nextQuestion(\"Want to do something spiritual?\"); \r\n                directAnswer(\"\") }}\r\n            answer_1={\"No\"}\r\n            onclick_2={() => { nextQuestion(\"Want to do something spiritual?\"); \r\n                directAnswer(\"relational\") }}\r\n            answer_2={\"Yes\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    } else if (currentQuestion === \"Want to do something spiritual?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"Want to do something spiritual?\"}\r\n\r\n            tool_tip_content={`spiritual meaning an activity that is healthy for your soul`}\r\n\r\n            onclick_1={() => { nextQuestion(\"Want to do something intellectual?\"); \r\n                directAnswer(\"\") }}\r\n            answer_1={\"No\"}\r\n            onclick_2={() => { nextQuestion(\"Want to do something intellectual?\"); \r\n                directAnswer(\"spiritual\") }}\r\n            answer_2={\"Yes\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    } else if (currentQuestion === \"Want to do something intellectual?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"Want to do something intellectual?\"}\r\n\r\n            tool_tip_content={`Intellectual meaning an activity that may involve mental effort.`}\r\n\r\n            onclick_1={() => { nextQuestion(\"Want to do something physical?\"); \r\n                directAnswer(\"\") }}\r\n            answer_1={\"No\"}\r\n            onclick_2={() => { nextQuestion(\"Want to do something physical?\"); \r\n                directAnswer(\"intellectual\") }}\r\n            answer_2={\"Yes\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    } else if (currentQuestion === \"Want to do something physical?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"Want to do something physical?\"}\r\n\r\n            tool_tip_content={`physical meaning an activiy that may involve physical movement. \r\n            You will likely not be sitting in one place`}\r\n\r\n            onclick_1={() => { nextQuestion(\"Want to play some sort of game?\"); \r\n            directAnswer(\"\") }}\r\n            answer_1={\"No\"}\r\n            onclick_2={() => { nextQuestion(\"Want to play some sort of game?\"); \r\n            directAnswer(\"physical\") }}\r\n            answer_2={\"Yes\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    } else if (currentQuestion === \"Want to play some sort of game?\") {\r\n        return (\r\n\r\n            <MultiQustion\r\n            question={\"Want to play some sort of game?\"}\r\n\r\n            tool_tip_content={`A game typically involves some sort of \r\n            sport or competition with winners and losers. \r\n            The Alternative would be an activity with little to no competition `}\r\n\r\n            onclick_1={() => { endQuiz(\"\") }}\r\n            answer_1={\"No\"}\r\n            onclick_2={() => { nextQuestion(\"What kind of games are you interested in?\"); \r\n            directAnswer(\"game\") }}\r\n            answer_2={\"Yes\"}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    } else if (currentQuestion === \"What kind of games are you interested in?\") {\r\n        return (\r\n\r\n            <MultiSelectQustion\r\n            question={\"Want to play some sort of game? Click all that apply\"}\r\n\r\n            tool_tip_content={`Choose all that apply `}\r\n\r\n            select_1={{label:\"Talking Game\", tag:\"talking_game\"}}\r\n            select_2={{label:\"Paper and Pencil Game\", tag:\"paperpencil_game\"}}\r\n            select_3={{label:\"Yard Game\", tag:\"yard_game\"}}\r\n            select_4={{label:\"Sports Game\", tag:\"sports_game\"}}\r\n            select_5={{label:\"Table Game\", tag:\"table_game\"}}\r\n            select_6={{label:\"Card Game\", tag:\"card_game\"}}\r\n            select_7={{label:\"Board Game\", tag:\"board_game\"}}\r\n            select_8={{label:\"Party Game\", tag:\"party_game\"}}\r\n            select_9={{label:\"Video Game\", tag:\"video_game\"}}\r\n\r\n            addTagsMethod={multiSelectAnswers}\r\n            after_multi_select={() => { endQuiz(\"\") }}\r\n            backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n        )\r\n    }\r\n    \r\n    // else {\r\n    //     return (\r\n    //         <Redirect to={{\r\n    //             pathname: '/UnknownPage',\r\n    //         }}\r\n    //         />\r\n    //     )\r\n    // }\r\n    \r\n}\r\n\r\nexport default NotHungryflow\r\n","import React from 'react'\r\nimport HungryFlow from './HungryFlow/HungryFlow'\r\nimport NotHungryFlow from './NotHungryFlow/NotHungryFlow';\r\nimport MultiQustion from '../../common/MultiQustion';\r\nimport { Redirect } from 'react-router-dom';\r\nimport \"./tooltip.css\"\r\nimport \"./selectStyles.css\"\r\n\r\nfunction BaseFlow(props) {\r\n\r\n    let {multiSelectAnswers, directAnswer, nextQuestion, endQuiz, backToLastQuestion, \r\n        currentQuestion, selectQuestion, onInputChange, answer, quizEnded, queryList}=props\r\n    if (quizEnded) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: '/quiz/preresults',\r\n\r\n                queryList: queryList\r\n            }}\r\n            />\r\n        )\r\n\r\n    } else if (currentQuestion === \"How many people?\") {\r\n\r\n\r\n        // let howManyPeopleToolTip=`How many people will be involved with what your deciding to do? \r\n        // If you are alone select 1. Otherwise select the number of people in your group. Dont worry if the number changes, you can always take the quiz again!`\r\n\r\n        let howManyPeopleToolTip=`How many people will be involved with what your deciding to do? \r\n        If you are alone select 1. Otherwise select the number of people in your group.`\r\n\r\n        return (\r\n            <div className=\"dropdownQuestionDiv\">\r\n\r\n\r\n\r\n                <h1>How many people?</h1>\r\n                <label className=\"tool tooltiplabel\" data-tip={howManyPeopleToolTip} >More Context</label>\r\n                <div className='selectDiv'>\r\n                    <select name=\"answer\" onChange={onInputChange} value={answer}>\r\n                        <option key=\"1\" value=\"1\">1</option>\r\n                        <option key=\"2\" value=\"2\">2</option>\r\n                        <option key=\"3\" value=\"3\">3</option>\r\n                        <option key=\"4\" value=\"4\">4</option>\r\n                        <option key=\"5\" value=\"5\">5</option>\r\n                        <option key=\"6\" value=\"6\">6</option>\r\n                        <option key=\"7\" value=\"7\">7</option>\r\n                        <option key=\"8\" value=\"8\">8</option>\r\n                        <option key=\"9\" value=\"9\">9</option>\r\n                        <option key=\"tenPlusPeople\" value=\"tenPlusPeople\">10 or More</option>\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                    selectQuestion();\r\n                    nextQuestion(\"How Much Time Do you have?\")\r\n                }}>NEXT</button>\r\n            </div>\r\n        )\r\n\r\n    } else if (currentQuestion === \"How Much Time Do you have?\") {\r\n\r\n        return (\r\n\r\n            <MultiQustion\r\n                question={\"How Much Time Do you have?\"}\r\n\r\n                tool_tip_content={`How much time do you have for\r\n                 an activity?`}\r\n\r\n                answer_1={\"30 minutes or less\"}\r\n                onclick_1={() => {\r\n                    directAnswer(\"30minutesOrLess\");\r\n                    nextQuestion(\"Are you hungry?\")\r\n                }}\r\n\r\n                answer_2={\"1 hour or less\"}\r\n                onclick_2={() => {\r\n                    directAnswer(\"1hourOrLess\");\r\n                    nextQuestion(\"Are you hungry?\")\r\n                }}\r\n\r\n                answer_3={\"2 hours or less\"}\r\n                onclick_3={() => {\r\n                    directAnswer(\"2hoursOrLess\");\r\n                    nextQuestion(\"Are you hungry?\")\r\n                }}\r\n\r\n                answer_4={\"more then 2 hours\"}\r\n                onclick_4={() => {\r\n                    directAnswer(\"2hoursOrMore\");\r\n                    nextQuestion(\"Are you hungry?\")\r\n                }}\r\n\r\n                backToLastQuestion={backToLastQuestion}\r\n            />\r\n\r\n            // <div className=\"dropdownQuestionDiv\">\r\n\r\n            //     <h1>How Much Time Do you have?</h1>\r\n            //     <div className='selectDiv'>\r\n            //         <select name=\"answer\" onChange={onInputChange} value={answer}>\r\n            //             <option key=\"30minutesOrLess\" value=\"30minutesOrLess\">30 minutes or less</option>\r\n            //             <option key=\"1hourOrLess\" value=\"1hourOrLess\">1 hour or less</option>\r\n            //             <option key=\"2hoursOrLess\" value=\"2hoursOrLess\">2 hours or less</option>\r\n            //             <option key=\"2hoursOrMore\" value=\"2hoursOrMore\">more then 2 hours</option>\r\n            //         </select>\r\n            //     </div>\r\n\r\n            //     <button className=\"btn btn-primary\" onClick={() => {\r\n            //         selectQuestion();\r\n            //         nextQuestion(\"Are you hungry?\")\r\n            //     }}>NEXT</button>\r\n\r\n            //     <button className=\"btn btn-secondary goBackBtn\" onClick={backToLastQuestion}>Go Back</button>\r\n            // </div>\r\n        )\r\n    } else if (currentQuestion === \"Are you hungry?\") {\r\n        return (\r\n            <MultiQustion\r\n                question={\"Are you hungry?\"}\r\n\r\n                tool_tip_content={`Are you, or the collective \r\n                group your with hungry as a whole?\r\n                We recommend answering what most people want to do.\r\n                Vote with a show of hands if you need too.\r\n                Yes for hungry wins ties.`}\r\n\r\n                onclick_1={() => {\r\n                    directAnswer(\"\");\r\n                    nextQuestion(\"Stay or Leave your current location?\")\r\n                }}\r\n                answer_1={\"No\"}\r\n                onclick_2={() => {\r\n                    directAnswer(\"hungry\");\r\n                    nextQuestion(\"Stay or Leave your current location?\")\r\n                }}\r\n                answer_2={\"Yes\"}\r\n                backToLastQuestion={backToLastQuestion}\r\n            />\r\n        )\r\n    } else if (currentQuestion === \"Stay or Leave your current location?\") {\r\n        return (\r\n            <MultiQustion\r\n                question={\"Stay or Leave your current location?\"}\r\n\r\n                tool_tip_content={`To stay would mean limiting you and or your group\r\n                 to your current surroundings. Leaving is represented by \r\n                 actively needing to travel somewhere.`}\r\n\r\n                onclick_1={() => {\r\n                    directAnswer(\"stay\");\r\n                    nextQuestion(\"HungryFork\")\r\n                }}\r\n                answer_1={\"Stay\"}\r\n                onclick_2={() => {\r\n                    directAnswer(\"leave\");\r\n                    nextQuestion(\"HungryFork\")\r\n                }}\r\n                answer_2={\"Leave\"}\r\n                backToLastQuestion={backToLastQuestion}\r\n            />\r\n        )\r\n    }\r\n    //if hungry and leave\r\n    else if (currentQuestion === \"What kind of dining?\" || currentQuestion === \"Want to prepare your own food?\") {\r\n        return (\r\n\r\n            <HungryFlow\r\n                currentQuestion={currentQuestion}\r\n                directAnswer={directAnswer}\r\n                multiSelectAnswers={multiSelectAnswers}\r\n                nextQuestion={nextQuestion}\r\n                endQuiz={endQuiz}\r\n                backToLastQuestion={backToLastQuestion}\r\n            />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n\r\n            <NotHungryFlow\r\n                currentQuestion={currentQuestion}\r\n                directAnswer={directAnswer}\r\n                multiSelectAnswers={multiSelectAnswers}\r\n                nextQuestion={nextQuestion}\r\n                endQuiz={endQuiz}\r\n                backToLastQuestion={backToLastQuestion}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default BaseFlow\r\n","import React, { Component } from 'react';\r\n//import { Redirect } from 'react-router-dom';\r\n//import HungryFlow from './Flows/HungryFlow/HungryFlow'\r\n//import NotHungryFlow from './Flows/NotHungryFlow/NotHungryFlow';\r\nimport './QuizStyles.css';\r\n//import MultiQustion from '../common/MultiQustion';\r\nimport BaseFlow from './Flows/BaseFlow';\r\n\r\n\r\nexport class QuizPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            answer: \"1\",\r\n            quizEnded: false,\r\n            queryList: [],\r\n            currentQuestion: \"How many people?\"\r\n        }\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.selectQuestion = this.selectQuestion.bind(this);\r\n        this.backToLastQuestion = this.backToLastQuestion.bind(this);\r\n        this.directAnswer = this.directAnswer.bind(this);\r\n        this.multiSelectAnswers = this.multiSelectAnswers.bind(this);\r\n        this.endQuiz = this.endQuiz.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        //Bring in Current Question on page refresh\r\n        let localstorage_currentQuestion = localStorage.getItem('currentQuestion')\r\n        if (localstorage_currentQuestion != null) {\r\n            let currentQuestion = localStorage.getItem('currentQuestion');\r\n            //console.log(\"Question in local storage: \", currentQuestion)\r\n            this.setState({\r\n                currentQuestion: currentQuestion\r\n            })\r\n        }\r\n\r\n        //Bring in Saved queryList on page refresh\r\n        let localstoragejson = localStorage.getItem('savedQueryList')\r\n        if (localstoragejson != null) {\r\n            let savedQueryList = JSON.parse(localStorage.getItem('savedQueryList'));\r\n            this.setState({\r\n                queryList: savedQueryList\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onInputChange(e) {\r\n        if (e.target.name === 'answer')\r\n            this.setState({\r\n                answer: e.target.value\r\n            });\r\n    }\r\n\r\n    backToLastQuestion() {\r\n\r\n        let newQueryList = this.state.queryList;\r\n        // console.log(\"select: this.state.answer: \", this.state.answer)\r\n        newQueryList.pop();\r\n\r\n        updatelocalStorage(newQueryList);\r\n\r\n        this.setState({\r\n            queryList: newQueryList\r\n        })\r\n\r\n        let questionHistory = JSON.parse(localStorage.getItem('questionHistory'));\r\n\r\n        let lastquestion = questionHistory.slice(-1)[0];\r\n        //console.log(\"lastquestion\", lastquestion)\r\n        questionHistory.pop();\r\n        localStorage.setItem('questionHistory', JSON.stringify(questionHistory));\r\n\r\n        if (lastquestion === \"How many people?\") {\r\n            this.setState({ answer: \"1\" })\r\n        }\r\n\r\n        localStorage.setItem('currentQuestion', lastquestion);\r\n        this.setState({\r\n            currentQuestion: lastquestion\r\n        })\r\n    }\r\n\r\n    nextQuestion(nextTitle) {\r\n\r\n        //store previous question in question array\r\n        if (this.state.currentQuestion === \"How many people?\") {\r\n            //console.log(\"Last Question in local storage: \", \"How many people?\")\r\n            let questionHistory = [\"How many people?\"];\r\n\r\n            localStorage.setItem('questionHistory', JSON.stringify(questionHistory));\r\n        } else {\r\n            let lastquestion = localStorage.getItem('currentQuestion');\r\n            let questionHistory = JSON.parse(localStorage.getItem('questionHistory'));\r\n            questionHistory.push(lastquestion)\r\n            //console.log(\"NewQuestionHistory \", questionHistory)\r\n            localStorage.setItem('questionHistory', JSON.stringify(questionHistory));\r\n        }\r\n\r\n        //console.log(\"nextTitle\", nextTitle)\r\n\r\n        //--------------Forks---------------------\r\n\r\n        if (nextTitle === \"HungryFork\") {\r\n            if (this.state.queryList.includes('hungry')) {\r\n                if (this.state.queryList.includes('leave')) {\r\n                    nextTitle = \"What kind of dining?\"\r\n                } else if (this.state.queryList.includes('stay')) {\r\n                    nextTitle = \"Want to prepare your own food?\"\r\n                }\r\n\r\n            } else {\r\n                nextTitle = \"Want to be inside or outside?\"\r\n            }\r\n        }\r\n\r\n        //-----------------------------------\r\n\r\n        //This was only necessary if I had this question be a select.\r\n        // if (nextTitle === \"How Much Time Do you have?\") {\r\n        //     this.setState({ answer: \"30minutesOrLess\" })\r\n        // }\r\n\r\n        localStorage.setItem('currentQuestion', nextTitle);\r\n\r\n        //console.log(\"nextTitle\", nextTitle)\r\n        this.setState({\r\n            currentQuestion: nextTitle\r\n        })\r\n    }\r\n\r\n    //to answer for select and dropdown questions\r\n    selectQuestion() {\r\n\r\n        let newQueryList = this.state.queryList;\r\n        // console.log(\"select: this.state.answer: \", this.state.answer)\r\n        newQueryList.push(this.state.answer);\r\n\r\n        updatelocalStorage(newQueryList);\r\n\r\n        this.setState({\r\n            queryList: newQueryList\r\n        })\r\n\r\n    }\r\n\r\n    // to answer muti question and quality questions with only one answer\r\n    directAnswer(answer) {\r\n\r\n        let newQueryList = this.state.queryList;\r\n        // console.log(\"this.state.queryList : \", this.state.queryList)\r\n        // console.log(\"direct: answer: \", answer)\r\n        newQueryList.push(answer);\r\n\r\n        updatelocalStorage(newQueryList);\r\n\r\n        this.setState({\r\n            queryList: newQueryList\r\n        })\r\n    }\r\n\r\n    // to add answers from multi selects\r\n    multiSelectAnswers(answerArray) {\r\n\r\n        let newQueryList = this.state.queryList;\r\n        // console.log(\"this.state.queryList : \", this.state.queryList)\r\n        // console.log(\"direct: answer: \", answer)\r\n        for(let i=0;i<answerArray.length;i++){\r\n            newQueryList.push(answerArray[i]);\r\n        }\r\n\r\n\r\n        updatelocalStorage(newQueryList);\r\n\r\n        this.setState({\r\n            queryList: newQueryList\r\n        })\r\n    }\r\n\r\n    endQuiz(answer) {\r\n        //After async operation of getting results, then display in EndQuizResults\r\n\r\n        sessionStorage.setItem(\"quizEnded\", \"True\")\r\n\r\n        if (answer === \"\") {\r\n            this.setState({\r\n                quizEnded: true\r\n            })\r\n        } else {\r\n            let newQueryList = this.state.queryList;\r\n            //console.log(\"End quiz: answer: \", answer)\r\n            newQueryList.push(answer);\r\n\r\n            updatelocalStorage(newQueryList);\r\n\r\n            //console.log(\"End quiz QueryList: \", newQueryList)\r\n            this.setState({\r\n                queryList: newQueryList,\r\n                quizEnded: true\r\n            })\r\n        }\r\n    }\r\n\r\n    //Base render\r\n    render() {\r\n        return (\r\n            <BaseFlow\r\n                {...this.state}\r\n                onInputChange={this.onInputChange}\r\n                selectQuestion={this.selectQuestion}\r\n                backToLastQuestion={this.backToLastQuestion}\r\n                directAnswer={this.directAnswer}\r\n                multiSelectAnswers={this.multiSelectAnswers}\r\n                endQuiz={this.endQuiz}\r\n                nextQuestion={this.nextQuestion}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nfunction updatelocalStorage(queryList) {\r\n\r\n    let savedQueryList = JSON.stringify(queryList);\r\n    localStorage.setItem('savedQueryList', savedQueryList);\r\n};\r\n\r\nexport default QuizPage;\r\n","import React, { Component } from 'react'\r\n// import Activities from '../../api/activities';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport './EndQuizResult.css';\r\n\r\nexport class EndQuizResult extends Component {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            results: [],\r\n            loading: true,\r\n            need_to_check_prereqs: false,\r\n            prereqs:[]\r\n        }\r\n        this.doneWithPrereqs=this.doneWithPrereqs.bind(this);\r\n    }\r\n        \r\n\r\n    async componentDidMount() {\r\n        this._isMounted = true;\r\n        let activities = []\r\n        // if (this.props.location.answerCode) {\r\n        //     activities = await Activities.getQuizResults(this.props.location.answerCode);\r\n        //     let savedAnswerCode = JSON.stringify(this.props.location.answerCode)\r\n        //     localStorage.setItem('savedAnswerCode', savedAnswerCode);\r\n        // } else {\r\n        //     let localstoragejson = localStorage.getItem('savedAnswerCode')\r\n        //     console.log(\"localstoragejson: \", localstoragejson)\r\n        //     let savedAnswerCode = JSON.parse(localStorage.getItem('savedAnswerCode'));\r\n        //     activities = await Activities.getQuizResults(savedAnswerCode);\r\n        // }\r\n\r\n        //This may be this.props.location.activities as an activities list of the the activities that have been confirmed as viable via the prereqs\r\n\r\n        if (this.props.location.activities) {\r\n            activities = this.props.location.activities;\r\n            // activities = await Activities.getQuizResults(this.props.location.queryList);\r\n            // let savedQueryList = JSON.stringify(this.props.location.queryList)\r\n            // localStorage.setItem('savedQueryList', savedQueryList);\r\n        } else {\r\n            activities = JSON.parse(localStorage.getItem('activityResults'));\r\n        }\r\n\r\n        // let token = sessionStorage.getItem('token');\r\n        // if (token != null) {\r\n        //     Auth.isAuthenticated = true;\r\n        // }\r\n\r\n\r\n\r\n        if (activities) {\r\n            if( this._isMounted === true){\r\n                this.setState({\r\n                    results: activities,\r\n                    loading: false\r\n                })\r\n            }\r\n\r\n            ///-----------------------------------------------\r\n            /// I will refactor this into a prereqs page. \r\n            //Check if activities have prereqs\r\n            // let prereqs_array=[]\r\n            // for (let i=0; i<activities.length;i++){\r\n            //     let prereq=\"\"\r\n            //     let prereq_description=\"\"\r\n            //     if(activities[i].prereq && activities[i].prereq!==''){\r\n            //         prereq=activities[i].prereq\r\n            //     }\r\n            //     if(activities[i].prereq_description && activities[i].prereq_description!==''){\r\n            //         prereq_description=activities[i].prereq_description\r\n            //     }\r\n\r\n            //     let prereq_obj={prereq,prereq_description};\r\n            //     if(prereq !=='' ){\r\n            //         prereqs_array.push(prereq_obj)\r\n            //     }\r\n            // }\r\n            // console.log(\"prereqs_array\", prereqs_array)\r\n            // if (prereqs_array.length !== 0){\r\n                \r\n            //     this.setState({\r\n            //         prereqs: prereqs_array,\r\n            //         need_to_check_prereqs:true\r\n            //     })\r\n            // }\r\n            ///------------------------------------------------\r\n            \r\n\r\n        } else {\r\n            //there were no activies that fit the answer\r\n            console.log(\"there were no activies that fit the answer\")\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n      }\r\n\r\n\r\n    doneWithPrereqs(){\r\n        this.setState({need_to_check_prereqs:false})\r\n    }\r\n\r\n    render() {\r\n        const { loading, results } = this.state\r\n\r\n        let quizEnded=sessionStorage.getItem(\"quizEnded\");\r\n        if (quizEnded===\"False\"){\r\n            return (\r\n                <Redirect to={{\r\n                    pathname: '/',\r\n                }}\r\n                />\r\n            )\r\n        }\r\n\r\n        // if(this.state.need_to_check_prereqs){\r\n        //     return(\r\n        //         <div>\r\n        //             There are pre reqs!\r\n        //             <ul>{this.state.prereqs.map(prereq=>{\r\n        //                 return <li key={prereq.prereq}>{prereq.prereq}:{prereq.prereq_description}</li>\r\n        //             })}</ul>\r\n        //             <button onClick={this.doneWithPrereqs}>Done with prereqs</button>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n        \r\n\r\n        if (!results) {\r\n            return (\r\n                <div>\r\n                    <h1>We will have your results any second now</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            //console.log(\"State Results: \", results)\r\n            //console.log(\"State Results.length: \", results.length)\r\n            return (\r\n                <div className=\"EndResultsBackgroundDiv\">\r\n                    <div className=\"EndResultsTopBarDiv\">\r\n\r\n                    </div>\r\n                    <div className=\"EndResultsContentDiv\">\r\n                        {!loading && <h1>These are your results!</h1>}\r\n                        {!loading && <ul>{results.map((activity) => {\r\n                            return (<li key={activity._id}><div>\r\n                                \r\n                                <span><a href={`/quiz/results/${activity._id}`}>{activity.title}</a></span>\r\n\r\n                            </div></li>)\r\n                        })}</ul>}\r\n                        {loading && <h1>Loading results...</h1>}\r\n                        {!loading && results.length === 0 && <h1>Sorry, We couldnt find anything for you based on your answers</h1>}\r\n\r\n                        <div className=\"CenterAll\">\r\n                            <button className=\"btn btn-primary\">\r\n                                <NavLink className=\"btn-link\" to=\"/quiz\" onClick={()=>{ localStorage.clear(); sessionStorage.setItem(\"quizEnded\", \"False\") }} >Take The Quiz again!</NavLink>\r\n                            </button>\r\n                        </div>\r\n\r\n                      {this.state.prereqs.length !== 0 && <div>\r\n                            <p>Prereqs exist!!</p>\r\n                                    </div> }  \r\n\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default EndQuizResult\r\n\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport Auth from '../../auth/auth'\r\n\r\nexport const ProtectedRoute = ({component:Component, ...rest}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render ={ props =>{\r\n                let token = sessionStorage.getItem('token');\r\n                if (token != null) {\r\n                    Auth.isAuthenticated=true;\r\n                }\r\n                if(Auth.isAuthenticated){\r\n                    return <Component {...props}/>\r\n                }else{\r\n                    return <Redirect \r\n                    to=\"/\"\r\n                    />\r\n                }\r\n                \r\n            }\r\n        }\r\n        />\r\n    );\r\n} \r\nexport default ProtectedRoute;\r\n\r\n","import React, { Component } from 'react'\r\nimport Activities from '../../api/activities';\r\nimport { NavLink} from 'react-router-dom';\r\n\r\nexport class Activity extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            instructions: \"\",\r\n            tags: [],\r\n            error: \"\"\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //LifeCycle method\r\n    async componentWillMount() {\r\n        try {\r\n            let activity = await Activities.getActivityById(this.props.match.params.id);\r\n            let description = !activity.description.startsWith(\"{\") ? activity.description : null\r\n            let instructions = !activity.instructions.startsWith(\"{\") ? activity.instructions : null\r\n            this.setState({\r\n                tags: activity.tags,\r\n                title: activity.title,\r\n                description: description,\r\n                instructions: instructions,\r\n            })\r\n        } catch (e) {\r\n            console.log(\"Error: \", e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>Activity</h1>\r\n                <ul>\r\n                    <li>\r\n                        {\"Title: \"+ this.state.title}\r\n                    </li>\r\n                    {this.state.description &&                     \r\n                    <li>\r\n                        {`Description: ${this.state.description}`}\r\n                    </li>}\r\n                    {this.state.instructions &&                     \r\n                    <li>\r\n                        {`Instructions: ${this.state.instructions}`}\r\n                    </li>}\r\n                </ul>\r\n                <div className=\"CenterAll\">\r\n                    <button className=\"btn btn-primary\">\r\n                        <NavLink className=\"btn-link\" to=\"/quiz/results/\">Back to results</NavLink>\r\n                    </button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Activity\r\n","import React, { Component } from 'react'\r\nimport \"./PreResultsMultiSelect.css\"\r\n\r\nexport class PreResultsMultiSelect extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            activities_to_add:[]     \r\n        }\r\n\r\n        this.toggleActivity=this.toggleActivity.bind(this);\r\n    }\r\n\r\n    //When This component loads, get this.props.activities_with_prereqs which has all the activities to check\r\n    //and ultimately send back the confirmed activiy items in \"PreReqConfirmationArray(this.state.activities_to_add);\"\r\n    // My Plan is this, I will add a on component start up method that will create the prereq list without dubplicates from the activities_with_prereqs list\r\n    // Then when the compoennt is rendered it will have only the unique prereqs.\r\n    // When the user clicks \"done\" a new function I create will fire, it will take that list and for each prereq that is checked\r\n    //it will look through the original this.props.activities_with_prereqs and if an activity prereq title matches a title clicked then\r\n    // add that original activity to the new activity list and when thats done finish it.\r\n    // addtionally I need to update the Verbish in this component. If I do I toggle, it should be for a unique prereq and no longer an exact activity.\r\n\r\n    toggleActivity(Activity){\r\n        //Add if its not already in array, remove if it already is.\r\n        let newActivityList = this.state.activities_to_add\r\n        if(newActivityList.includes(Activity)){\r\n            //remove Activity since already in \r\n            var index = newActivityList.indexOf(Activity);\r\n            newActivityList.splice(index, 1);\r\n        }else{\r\n            //add Activity since already in \r\n            newActivityList.push(Activity);\r\n        }\r\n        \r\n\r\n        this.setState({\r\n            activities_to_add: newActivityList\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { question, activities_with_prereqs, tool_tip_content, PreReqConfirmationArray, after_multi_select} =this.props\r\n\r\n            const {activities_to_add} = this.state\r\n        return (\r\n            <div className=\"preResultMultiSelectDiv\">\r\n\r\n                <h1>{question}</h1>\r\n                {tool_tip_content && <label className=\"tool tooltiplabel\" data-tip={tool_tip_content} >More Context</label>}\r\n\r\n                <div className='preResultsSelectButtons'>\r\n                    {activities_with_prereqs.map(activity =>{\r\n                    return <button key={activity._id} className={activities_to_add.includes(activity) ? \"selected-multiselect preResultsMultiSelect\" : \"unselected-multiselect preResultsMultiSelect\"} onClick={()=>{this.toggleActivity(activity)}}>{activity.prereq}</button>\r\n                    })}\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                        //Add a new function in this component that will call these bottem two methods in addtion to more logic\r\n                        PreReqConfirmationArray(this.state.activities_to_add);\r\n                        after_multi_select();\r\n                    }}>NEXT</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PreResultsMultiSelect\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Activities from '../../api/activities';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PreResultsMultiSelect from './PreResultsMultiSelect';\r\n\r\nexport class PreResultsPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            need_to_check_prereqs: true,\r\n            queryList:[],\r\n            activities:[],\r\n            loading:true,\r\n            prereq_activity_array:[]\r\n        }\r\n\r\n        this.PreReqConfirmationArray=this.PreReqConfirmationArray.bind(this);\r\n        this.doneWithPreReqs=this.doneWithPreReqs.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this._isMounted = true;\r\n        let activities = []\r\n\r\n\r\n        ///\r\n        //TODO this is where I should call the preview endpoint on the backend to just return prereq actovities based on querylist.\r\n        ///\r\n\r\n        if (this.props.location.queryList) {\r\n            activities = await Activities.getQuizResults(this.props.location.queryList);\r\n        } else {\r\n            let localstoragejson = localStorage.getItem('savedQueryList')\r\n            console.log(\"localstoragejson: \", localstoragejson)\r\n            let savedQueryList = JSON.parse(localStorage.getItem('savedQueryList'));\r\n            activities = await Activities.getQuizResults(savedQueryList);\r\n        }\r\n\r\n        //At this point I would only have the activities with prereqs with only minimal info on each.\r\n        //I would still cehck to see if _isMounted is true and then setstate for locading and actovities\r\n        // but I dont need to check if actiovities have prereqs cuz that would be taken care of by the backend endpoint.\r\n\r\n        if (activities) {\r\n            if( this._isMounted === true){\r\n                this.setState({\r\n                    activities: activities,\r\n                    loading: false\r\n                })\r\n            }\r\n\r\n\r\n            //Check if activities have prereqs\r\n            let prereqs_array=[]\r\n            let newActivitiesList = activities.slice(0); //This creates a new refference in memory for array.\r\n            for (let i=0; i<activities.length;i++){\r\n\r\n                // let prereq=\"\"\r\n                // let prereq_description=\"\"\r\n                if(activities[i].prereq && activities[i].prereq!==''){\r\n                    // prereq=activities[i].prereq\r\n\r\n                    //Check here if Any existing prereqs have same name and dont add them if they do (MAYBE got to conrim other logic first)\r\n\r\n                    //If prereq_description is null set it to empty string.\r\n                    if(!activities[i].prereq_description){\r\n                        activities[i].prereq_description =\"\"\r\n                    }\r\n\r\n                    prereqs_array.push(activities[i])\r\n\r\n                    //remove prereq from new activities list\r\n                    var index = newActivitiesList.indexOf(activities[i]);\r\n                    newActivitiesList.splice(index, 1);\r\n                    \r\n                }\r\n                // if(activities[i].prereq_description && activities[i].prereq_description!==''){\r\n                //     prereq_description=activities[i].prereq_description\r\n                // }\r\n\r\n                // let prereq_obj={prereq,prereq_description, id: activities[i]._id};\r\n                // if(prereq !=='' ){\r\n                //     prereqs_array.push(prereq_obj)\r\n                // }\r\n\r\n                \r\n \r\n            }\r\n\r\n\r\n            console.log(\"prereqs_array\", prereqs_array)\r\n            if (prereqs_array.length !== 0){\r\n                \r\n                this.setState({\r\n                    prereq_activity_array: prereqs_array,\r\n                    need_to_check_prereqs:true,\r\n                    activities:newActivitiesList\r\n                })\r\n            }else{\r\n                this.setState({need_to_check_prereqs:false})\r\n            }\r\n            ///------------------------------------------------\r\n            \r\n\r\n        } else {\r\n            //there were no activies that fit the answer\r\n            console.log(\"there were no activies that fit the answer\")\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    // to add answers from multi selects\r\n    PreReqConfirmationArray(activitiesArray) {\r\n\r\n        let newActivityList = this.state.activities;\r\n\r\n        for(let i=0;i<activitiesArray.length;i++){\r\n            newActivityList.push(activitiesArray[i]);\r\n        }\r\n\r\n        updatelocalStorageActivityResults(newActivityList);\r\n\r\n        this.setState({\r\n            activities: newActivityList\r\n        })\r\n    }\r\n\r\n    doneWithPreReqs(){\r\n        this.setState({need_to_check_prereqs:false})\r\n    }\r\n    \r\n    render() {\r\n        let {activities, need_to_check_prereqs} = this.state\r\n\r\n        if (!need_to_check_prereqs){\r\n            return (\r\n                <Redirect to={{\r\n                    pathname: '/quiz/results',\r\n    \r\n                    activities: activities\r\n                }}\r\n                />\r\n            )\r\n        }else{\r\n            return(\r\n                <PreResultsMultiSelect\r\n                question={\"Do you have the access to the following? Click all that apply\"}\r\n    \r\n                tool_tip_content={`Some things are required for certain activities. \r\n                we want to see if you have what you need before we suggest something you are unable to do.`}\r\n                \r\n                activities_with_prereqs={this.state.prereq_activity_array}\r\n    \r\n                PreReqConfirmationArray={this.PreReqConfirmationArray}\r\n                after_multi_select={this.doneWithPreReqs}\r\n\r\n                />\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction updatelocalStorageActivityResults(activities) {\r\n\r\n    let activityResults = JSON.stringify(activities);\r\n    localStorage.setItem('activityResults', activityResults);\r\n};\r\n\r\nexport default PreResultsPage","import React from 'react';\r\nimport { Route , Switch} from \"react-router-dom\";\r\nimport HomePage from './components/home/HomePage';\r\nimport AdminPage from './components/admin/AdminPage';\r\nimport AdminEditPage from './components/admin/AdminEditPage';\r\nimport AdminNewPage from './components/admin/AdminNewPage';\r\nimport NotFoundPage from './components/common/NotFoundPage';\r\nimport QuizPage from './components/Quiz/QuizPage';\r\nimport EndQuizResult from './components/Quiz/EndQuizResult';\r\nimport ProtectedRoute from './components/common/ProtectedRoute';\r\nimport Activity from './components/Quiz/Activity';\r\nimport PreResultsPage from './components/preresults/PreResultsPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"fullpage\">\r\n    <div className=\" container\">\r\n      </div>\r\n\r\n      <Switch>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <ProtectedRoute exact path=\"/quiz/\" component={QuizPage}/>\r\n      <ProtectedRoute exact path=\"/quiz/preresults/\" component={PreResultsPage}/>\r\n      <ProtectedRoute exact path=\"/quiz/results\" component={EndQuizResult}/>\r\n      <ProtectedRoute exact path=\"/quiz/results/:id/\" component={Activity}/>\r\n      <ProtectedRoute exact path=\"/decide-admin/\" component={AdminPage} />\r\n      <ProtectedRoute path=\"/decide-admin/list/\" component={AdminPage} />\r\n      <ProtectedRoute path=\"/decide-admin/new/\" component={AdminNewPage} />\r\n      <ProtectedRoute path=\"/decide-admin/edit/:id/\" component={AdminEditPage} />\r\n      <Route component={NotFoundPage} />\r\n      </Switch>\r\n      \r\n      \r\n     \r\n    \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\"\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <Route component={App} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}